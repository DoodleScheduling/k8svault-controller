
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: vaultbindings.vault.infra.doodle.com
spec:
  group: vault.infra.doodle.com
  names:
    kind: VaultBinding
    listKind: VaultBindingList
    plural: vaultbindings
    shortNames:
    - vb
    singular: vaultbinding
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Bound")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Bound")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VaultBinding is the Schema for the vaultbindings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultBindingSpec defines the desired state of VaultBinding
            properties:
              address:
                description: The http URL for the vault server By default the global VAULT_ADDRESS gets used.
                type: string
              auth:
                description: Vault authentication parameters
                properties:
                  role:
                    description: Role is used to map the kubernetes serviceAccount to a vault role. A default VAULT_ROLE might be set for the controller. If neither is set the VaultMirror can not authenticate.
                    type: string
                  tokenPath:
                    description: TokenPath allows to use a different token path used for kubernetes authentication.
                    type: string
                  type:
                    description: Type is by default kubernetes authentication. The vault needs to be equipped with the kubernetes auth method. Currently only kubernetes is supported.
                    type: string
                type: object
              fields:
                description: Define the secrets which must be mapped to vault
                items:
                  description: FieldMapping maps a secret field to the vault path
                  properties:
                    name:
                      description: Name is the kubernetes secret field name
                      type: string
                    rename:
                      description: Rename is no required. Hovever it may be used to rewrite the field name
                      type: string
                  required:
                  - name
                  type: object
                type: array
              forceApply:
                description: By default existing matching fields in vault do not get overwritten
                type: boolean
              path:
                description: 'The vault path, for example: /secret/myapp'
                type: string
              secret:
                description: The kubernetes secret the VaultBinding is referring to
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              tlsConfig:
                description: Vault TLS configuration
                properties:
                  caCert:
                    type: string
                  caPath:
                    type: string
                  clientCert:
                    type: string
                  clientKey:
                    type: string
                  insecure:
                    type: boolean
                  serverName:
                    type: string
                type: object
            required:
            - path
            - secret
            type: object
          status:
            description: VaultBindingStatus defines the observed state of VaultBinding
            properties:
              address:
                type: string
              conditions:
                description: Conditions holds the conditions for the VaultBinding.
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              fields:
                type: string
              path:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
